/*! lib - v1.0.0 - 2024-08-31 */
class Modal{constructor(){this.register={prototype:{map:{},storage:{},add:function(e){if(!e)throw"Missing arguments";var t=Symbol(e.name);this.map[e.name]=t,this.storage[t]=e},has:function(e){if(e)return e in this.map&&this.map[e]in this.storage;throw"Missing name"},fetch:function(e){if(e)return this.has(e)?this.storage[this.map[e]]:null;throw"Missing name"},remove:function(e){if(!e)throw"Missing name";var t;if(this.has(e))return t=this.map[e],delete this.storage[t],delete this.map[e],!0},list:function(){var e,t,r={};for([e,t]of Object.entries(this.map))r[e]=this.storage[t];return 0===Object.keys(r).length?null:r}},windows:{counter:0,storage:{},add:function(e){if(!e||!e instanceof Object)throw"Wrong parameter";var t=Symbol(e.name);return this.storage[t]=e,this.counter++,t},remove:function(e){if(!e||!e instanceof Symbol)throw"Missing Symbol";return 0 in this.storage,this.counter--,delete this.storage[e]},has:function(e){if(!e||!e instanceof Symbol)throw"Missing Symbol";return e in this.storage},fetch:function(e){return this.has(e)?this.storage[e]:null},list:function(){return 0<this.counter?this.storage:null}}}}add(e){try{if(!e||!e instanceof Object)throw"Parameter corrupt";if(!("name"in e&&"handler"in e&&"html"in e))throw"Missing parameter";if(!e.name||!e.html)throw"The 'html'and the 'template' parameters should be defined";var{name:t,html:r,handler:s}=e,a=document.createElement("template");a.innerHTML=r,this.register.prototype.add({name:t,template:a,onshow:s.onshow,onhide:s.onhide,clean:s.clean})}catch(e){[]instanceof Error}}prepare(e){try{var t,r,s;return e?!!this.register.prototype.has(e)&&(t=new WeakMap,r={},s={},t.set(s,this.register.prototype.fetch(e)),Object.defineProperty(r,"name",{value:t.get(s).name,writable:!1,configurable:!1}),Object.defineProperty(r,"node",{value:t.get(s).template.content.firstElementChild,writable:!1,configurable:!1}),Object.defineProperty(r,"preserve",{set:function(e){this.isPreserved=!!e&&"true"}}),Object.defineProperty(r,"onshow",{value:t.get(s).onshow,writable:!1,configurable:!1}),Object.defineProperty(r,"onhide",{value:t.get(s).onhide,writable:!1,configurable:!1}),Object.defineProperty(r,"clean",{value:t.get(s).clean,writable:!1,configurable:!1}),Object.defineProperty(r,"sym",{value:this.register.windows.add(r),writable:!1,configurable:!1}),Object.defineProperty(r,"register",{value:function(){return this}.bind(this.register.windows)(),writable:!1,configurable:!1}),Object.defineProperty(r,"show",{value:function(e){if(!e|!e instanceof Element)throw"Missing container";return this.onshow&&this.onshow(),e.appendChild(this.node),this.onDisplay=!0,this.container=e,!0},writable:!1,configurable:!1}),Object.defineProperty(r,"hide",{value:function(){this.onDisplay=!1,this.isPreserved||(this.register.remove(this.sym),this.clean&&this.clean()),this.onhide&&this.onhide(),this.container.removeChild(this.node)},writable:!1,configurable:!1}),t.delete(s),r):!1}catch(e){[]instanceof Error}}find(e){try{if(!e)throw"Missing Symbol";if(!e instanceof Symbol)throw"Wrong parameter";return this.register.windows.fetch(e)}catch(e){[]instanceof Error}}static example(){return`const modal = new Modal();
      [
        {
          name: 'test',
          html: 
            <div class=modal >
              <div class=wrapper >
                <div class=content >
                  <div><h1>Hello World!!!</h1></div>
                </div>
                <div class=close >
                  <button ref=closeBtn >Close</button>
                </div>
              </div>
            </div>,
          handler: {
            onshow: function() {
              console.log(this);
            },
            onhide: function() {
              console.log(this);
              
            },
            clean: null
          }
        }
      ].forEach(function(m) {

          modal.add(m);

      });


      const t = modal.prepare("test");
      t.show(document.body);
      t.preserve = false;
      t.hide();

      onshow   => before  window was appended to DOM
      onhide   => before window was removed  to DOM
      clean    => after window was removed from register
      preserve => remove... or not remove, window from register

    `}}class requestFunctions{constructor(){}validateArgs(){try{if(!this.args||!this.args.path||!this.args.method)throw"Missing property,\n either path or method, others are optional";if("GET"!==this.args.method&&"POST"!==this.args.method&&"PUT"!==this.args.method)throw"Unsupported method";if(this.args.headers&&"auto"!==this.args.headers){if(!Array.isArray(this.args.headers))throw"Wrong property instance. The 'headers' property, should be an array instance";if(0===this.args.headers.length)throw"If there is no headers in request, the 'headers' property should be defined as 'auto' ";let r;if(this.args.headers.forEach(function(e,t){r=!(!Array.isArray(e)||2!==e.length||"string"!=typeof e[0]||"string"!=typeof e[1])&&!1!==r}),!r)throw"Corrupted headers structure, all parameters should be an instance of an array, have two indexes, and they should be strings"}if(this.args.data){if(!Array.isArray(this.args.data))throw"Wrong property instance. The 'data' property, should be an array instance";if(0===this.args.data.length)throw"If there is no parameters in request data, the 'data' property should be defined as null";let r;if(this.args.data.forEach(function(e,t){r=e instanceof Object&&"name"in e&&"value"in e&&"string"==typeof e.name&&!1!==r}),!r)throw"Corrupted data structure, all parameters should be an instance of an object, have name and value properties, name schoud be a string"}return!0}catch(e){throw e instanceof Error?"Syntax error":`Provided arguments are invalid
\r`+e}}prepareRequest(){try{if(this.path=this.args.path,this.method=this.args.method,this.headers="auto"===this.args.headers?null:this.args.headers,this.args.data)if("GET"===this.args.method){let t;t="?time="+encodeURIComponent((new Date).toString()),this.args.data.forEach(function(e){t+=`&${e.name}=`+encodeURIComponent(e.value)}),this.path=this.path+t}else if("POST"===this.args.method){let t=new FormData;t.append("time",(new Date).toString()),this.args.data.forEach(function(e){t.append(e.name,e.value)}),this.data=t}}catch(e){throw e instanceof Error?"Syntax error":"While preparing request\n"+e}}}class XHRRequest extends requestFunctions{constructor(e){return super(),this.args=e,this.init()}static example(){return`
      new XHRRequest({
        path: "./",
        method: "POST",
        headers: "auto",
        data: [
          {
            name: "test",
            value: true
          }, {
            name: "foo",
            value: "bar"
          }
        ],
        progress: function(event) {
          console.log( (event.loaded / event.total) * 100);
        },
        load: function(event) {
          
        },
        error: function(event) {
          
        },
        abort: function(event) {
          
        },
        info: "test"

      });`}init(){try{return this.validateArgs(),this.prepareRequest(),this.call()}catch(e){return!1}}call(){return new Promise((t,r)=>{let s=new XMLHttpRequest;this.args.progress&&s.upload.addEventListener("progress",this.args.progress),s.addEventListener("error",e=>{this.args.error&&this.args.error(e),r(e)}),s.addEventListener("abort",e=>{this.args.abort&&this.args.abort(e),r(e)}),s.addEventListener("load",e=>{this.args.load&&this.args.load(e),t(JSON.parse(e.target.response))}),s.open(this.method,this.path,!0),this.headers&&this.headers.forEach(function(e){s.setRequestHeader(e[0],e[1])}),s.send(this.data||null)})}}